--------player task weekend-----------
==home controller---==
package com.myplayer.task;

import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.myplayer.task.dao.PlayerDao;
import com.myplayer.task.model.Player;





@Controller
public class HomeController {
	
	@Autowired
	PlayerDao dao;
	
	//Returns home
	
	@RequestMapping(value = "/")
	public String home(Model model) {
		return "home";
	}
	@RequestMapping(value = "/home")
	public String homee(Model model) {
		return "home";
	}
	
	
	
	//Respective Pages
	
	@RequestMapping(value = "/createPlayerPage")
	public String createPlayerPage(Model model) {
		return "createPlayerPage";
	}
	
	@RequestMapping(value = "/updatePlayerPage")
	public String updatePlayerPage(Model model) {
		return "updatePlayerPage";
	}
	
	@RequestMapping(value = "/searchDirectoryPage")
	public String searchDirectoryPage(Model model) {
		return "searchDirectoryPage";
	}
	
	@RequestMapping(value = "/deleteEntryPage")
	public String deleteEntryPage(Model model) {
		return "deleteEntryPage";
	}
	
	
	
	//Player Services
	//Create Player
	@RequestMapping(value = "/createPlayer")
	public String createPlayer(Model model,@ModelAttribute Player player) {
		String status=dao.createPlayer(player);
		return "createSuccess";
	}
	
	//Update Player
	int playerId=0;
	
	@RequestMapping(value="/searchForUpdate")
	public String searchForUpdate(Model model,@RequestParam("playerId") String playerId) {
		int pId=Integer.parseInt(playerId);
		this.playerId=pId;
		Player player=dao.getPlayerById(pId);
		model.addAttribute(player);
		return "updatePlayerPage";
	}
	
	@RequestMapping(value="/updatePlayer")
	public String updatePlayer(@ModelAttribute Player player){
		player.setPlayerId(playerId);
		dao.updatePlayerById(player);
		return "updateSuccess";
	}
	
	//Search Player
	
	@RequestMapping(value="/searchPlayerByIdPage")
	public String searchPlayerByIdPage(Model model) {
		return "searchPlayerByIdPage";
	}
	@RequestMapping(value="/searchPlayerByNamePage")
	public String searchPlayerByNamePage(Model model) {
		return "searchPlayerByNamePage";
	}
	@RequestMapping(value="/searchPlayerByTeamPage")
	public String searchPlayerByTeamPage(Model model) {
		return "searchPlayerByTeamPage";
	}
	@RequestMapping(value="/viewAllPlayers")
	public String viewAllPlayers(Model model) {
		ArrayList<Player> player=dao.viewAllPlayers();
		model.addAttribute("player", player);
		return "displaySearchResult";
	}
	
	
	@RequestMapping(value="/searchPlayerById")
	public String searchPlayerById(Model model,@RequestParam("playerId") String playerId) {
		ArrayList<Player> player=dao.searchPlayerById(Integer.parseInt(playerId));
		model.addAttribute("player", player);
		return "displaySearchResult";
	}
	
	@RequestMapping(value="/searchPlayerByName")
	public String searchPlayerByName(Model model,@RequestParam("playerName") String playerName) {
		ArrayList<Player> player=dao.searchPlayerByName(playerName);
		model.addAttribute("player", player);
		return "displaySearchResult";
	}
	
	@RequestMapping(value="/searchPlayerByTeam")
	public String searchPlayerByTeam(Model model,@RequestParam("playerTeam") String playerTeam) {
		ArrayList<Player> player=dao.searchPlayerByTeam(playerTeam);
		model.addAttribute("player", player);
		return "displaySearchResult";
	}
	
	//Delete Player
	@RequestMapping(value="/deletePlayerByIdPage")
	public String deletePlayerByIdPage(Model model) {
		return "deletePlayerByIdPage";
	}
	@RequestMapping(value="/deletePlayerByNamePage")
	public String deletePlayerByNamePage(Model model) {
		return "deletePlayerByNamePage";
	}
	
	
	@RequestMapping(value="/deletePlayerById")
	public String deletePlayerById(Model model,@RequestParam("playerId") String playerId) {
		dao.deletePlayerById(Integer.parseInt(playerId));
		return "deleteSuccess";
	}
	
	@RequestMapping(value="/deletePlayerByName")
	public String deletePlayerByName(Model model,@RequestParam("playerName") String playerName) {
		dao.deletePlayerByName(playerName);
		return "deleteSuccess";
	}
	
	
	
}
======================player=======

package com.myplayer.task.model;

import javax.persistence.Entity;
import javax.persistence.Id;

@Entity
public class Player {
	@Id
	private int playerId;
	private String playerName;
	private String playerTeam;
	public int getPlayerId() {
		return playerId;
	}
	public void setPlayerId(int playerId) {
		this.playerId = playerId;
	}
	public String getPlayerName() {
		return playerName;
	}
	public void setPlayerName(String playerName) {
		this.playerName = playerName;
	}
	public String getPlayerTeam() {
		return playerTeam;
	}
	public void setPlayerTeam(String playerTeam) {
		this.playerTeam = playerTeam;
	}
	public Player(int playerId, String playerName, String playerTeam) {
		super();
		this.playerId = playerId;
		this.playerName = playerName;
		this.playerTeam = playerTeam;
	}
	
	public Player() {
		// TODO Auto-generated constructor stub
	}
	@Override
	public String toString() {
		return "Player [playerId=" + playerId + ", playerName=" + playerName + ", playerTeam=" + playerTeam + "]";
	}
	
	
}
===================playerdao==============

package com.myplayer.task.dao;

import java.util.ArrayList;

import javax.transaction.Transactional;

import org.hibernate.Criteria;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.criterion.Restrictions;
import org.springframework.beans.factory.annotation.Autowired;

import com.myplayer.task.model.Player;



@Transactional
public class PlayerDao {
	@Autowired
	SessionFactory factory;
	public PlayerDao() {
		// TODO Auto-generated constructor stub
	}
	public PlayerDao(SessionFactory factory) {
		super();
		this.factory = factory;
	}
	
	public String createPlayer(Player player) {
		try {
			Session session=factory.getCurrentSession();
			session.save(player);
			return "Player created";
		} catch (Exception e) {
			e.printStackTrace();
		}
		return "Cannot create player";
	}
	
	public Player getPlayerById(int playerId) {
		try {
			Session session=factory.getCurrentSession();
			Player player=(Player)session.get(Player.class, playerId);
			return player;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}
	
	public String updatePlayerById(Player player) {
		try {
			Session session=factory.getCurrentSession();
			session.update("Player", player);
			return "Player Updated";
		} catch (Exception e) {
			e.printStackTrace();
		}
		return "Cannot Update";
	}
	
	public ArrayList<Player> searchPlayerById(int playerId){
		Session session=factory.openSession();
		Criteria ct=session.createCriteria(Player.class);
		ct.add(Restrictions.eq("playerId", playerId));
		
		ArrayList<Player> player=(ArrayList<Player>) ct.list();
		return player;
	}
	
	public ArrayList<Player> searchPlayerByName(String playerName){
		Session session=factory.openSession();
		Criteria ct=session.createCriteria(Player.class);
		ct.add(Restrictions.ilike("playerName", playerName));
		
		ArrayList<Player> player=(ArrayList<Player>) ct.list();
		return player;
	}
	
	public ArrayList<Player> searchPlayerByTeam(String playerTeam){
		Session session=factory.openSession();
		Criteria ct=session.createCriteria(Player.class);
		ct.add(Restrictions.ilike("playerTeam", playerTeam));
		
		ArrayList<Player> player=(ArrayList<Player>) ct.list();
		return player;
	}
	
	public String deletePlayerById(int playerId) {
		try {
			Session session=factory.getCurrentSession();
			Query query=session.createQuery("delete from Player p  where p.playerId=:playerId");
			query.setParameter("playerId", playerId);
			int res=query.executeUpdate();
			if(res>0)
				return "Entry Deleted";
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return "Cannot Delete";
	}
	
	public String deletePlayerByName(String playerName) {
		try {
			Session session=factory.getCurrentSession();
			Query query=session.createQuery("delete from Player p  where p.playerName=:playerName");
			query.setParameter("playerName", playerName);
			int res=query.executeUpdate();
			if(res>0)
				return "Entry Deleted";
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return "Cannot Delete";
	}
	
	public ArrayList<Player> viewAllPlayers() {
		try {
			Session session=factory.getCurrentSession();
			Query query=session.createQuery("from Player");
			ArrayList<Player> player=(ArrayList<Player>)query.list();
			return player;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}
}

===================hibernate.cfg.xml======

<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>        
  <session-factory>
    <property name="hibernate.dialect">org.hibernate.dialect.OracleDialect</property>
    <property name="show_sql">true</property>
    <property name="hibernate.connection.pool_size">1</property>
    <property name="cache.provider_class">org.hibernate.cache.NoCacheProvider</property>
    <property name="hbm2ddl.auto">update</property>

    <mapping class="com.myplayer.task.model.Player"/>

  </session-factory>
</hibernate-configuration>

==============servlet-context.xml===========

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns="http://www.springframework.org/schema/beans"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

<!-- Enables the Spring MVC @Controller programming model -->
<mvc:annotation-driven />

<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
<mvc:resources mapping="/resources/**" location="/resources/" />

<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<property name="prefix" value="/WEB-INF/views/" />
<property name="suffix" value=".jsp" />
</bean>

<context:component-scan base-package="com.myplayer.task" />



    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
        <property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:xe"/>
        <property name="username" value="dxcfs"/>
        <property name="password" value="pass"/>
    </bean>
   
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
<property name="configLocation" value="classpath:hibernate.cfg.xml" />
    </bean>
   
    <tx:annotation-driven />

    <bean id="transactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
 
<bean id="playerDao" class="com.myplayer.task.dao.PlayerDao">
   <constructor-arg>
       <ref bean="sessionFactory" />
   </constructor-arg>
</bean>    
</beans>

=============jsp-pages============

--player Creation--
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<html>
<head>
	<title>Create Player</title>
<style>
input[type=submit] {
font-family: Trebuchet MS;
background-color: black;
border-color: black;
border-width: 2px solid black;
text-decoration: none;
color: white;
padding: 10px 60px;
margin: 20px 20px;
cursor: pointer;
}
input[type=submit]:hover {
background-color: white;
color: black;
}
input[type=text], select {
  width: 50%;
  padding: 12px 20px;
  margin: 8px 0;
  display: inline-block;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
}
</style>
</head>
<body bgcolor="black">
<br>
<center>
<div style="background-color: black">
<font face="Trebuchet MS" size="8" color="white">Welcome To Player Portal</font>
</div>
<div style="background-color: white;width: 550px;height: 450px">
<br>
<font face="Trebuchet MS" size="5">Fill the details to create player</font>

<form action="createPlayer">
<br>
<font face="Trebuchet MS">Player ID:</font><br><input type="text" name="playerId" placeholder="Enter Player ID">
<br><br>
<font face="Trebuchet MS">Name:</font><br><input type="text" name="playerName" placeholder="Enter Player Name">
<br><br>
<font face="Trebuchet MS">Team:</font><br>
<select name="playerTeam">
<option value="Cricket">Cricket</option>
<option value="Football">Football</option>
<option value="Badminton">Badminton</option>
<option value="Volley ball">Volley ball</option>
<option value="kho-kho">kho-kho</option>
<option value="Hockey">Hockey</option>
<option value="Basketball">Basketball</option>
<option value="Tennis">Tennis</option>
</select>
<br><br>
<input type="submit" value="Create">
</form>


</div>
</center>
</body>
</html>

-----------sucess--
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<html>
<head>
	<title>Player Created</title>
<style>
input[type=submit] {
font-family: Trebuchet MS;
background-color: white;
border-color: white;
border-width: 2px solid black;
text-decoration: none;
color: black;
padding: 10px 60px;
margin: 20px 20px;
cursor: pointer;
}
input[type=submit]:hover {
background-color: black;
color: white;
}
</style>
</head>
<body bgcolor="black">
<center>
<br><br><br><br>
<font face="Trebuchet MS" size="6" color="white"><b>Player Created Successfully...!</b></font>
<br><br>
<form action="home">
<input type="submit" value="Home">
</form>

</center>
</body>
</html>
----------=========-----------
----deletion---------
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<html>
<head>
	<title>Delete Player</title>
<style>
input[type=submit] {
font-family: Trebuchet MS;
background-color: black;
border-color: black;
border-width: 2px solid black;
text-decoration: none;
color: white;
padding: 10px 60px;
margin: 20px 20px;
cursor: pointer;
}
input[type=submit]:hover {
background-color: white;
color: black;
}
</style>
</head>
<body bgcolor="black">
<br>
<center>

<div style="background-color: black">
<font face="Trebuchet MS" size="8" color="white">Delete Player</font>
</div>
<br>
<div style="background-color: white;width: 550px;height: 270px">
<br><br>
<form action="deletePlayerByIdPage">
<input type="submit" value="   Delete By ID   ">
</form>
<br>
<form action="deletePlayerByNamePage">
<input type="submit" value="Delete By Name">
</form>
</div>
</center>
</body>
</html>
------------delrte by id-----
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<html>
<head>
	<title>Delete Entry</title>
<style>
input[type=submit] {
font-family: Trebuchet MS;
background-color: black;
border-color: black;
border-width: 2px solid black;
text-decoration: none;
color: white;
padding: 10px 60px;
margin: 20px 20px;
cursor: pointer;
}
input[type=submit]:hover {
background-color: white;
color: black;
}
input[type=text], select {
  width: 50%;
  padding: 12px 20px;
  margin: 8px 0;
  display: inline-block;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
}
</style>
</head>
<body bgcolor="black">
<br>
<center>
<div style="background-color: black">
<font face="Trebuchet MS" size="8" color="white">Delete An Entry</font>
</div>
<div style="background-color: white;width: 550px;height: 450px">
<br><br><br>
<font face="Trebuchet MS" size="5">Enter Player ID</font>

<form action="deletePlayerById">
<br>
<input type="text" name="playerId" placeholder="Enter Player ID between 101 - 124">
<br>
<input type="submit" value="Delete">
</form>
</div>
</body>
</html>
-----------------by name------------
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<html>
<head>
	<title>Delete Entry</title>
<style>
input[type=submit] {
font-family: Trebuchet MS;
background-color: black;
border-color: black;
border-width: 2px solid black;
text-decoration: none;
color: white;
padding: 10px 60px;
margin: 20px 20px;
cursor: pointer;
}
input[type=submit]:hover {
background-color: white;
color: black;
}
input[type=text], select {
  width: 50%;
  padding: 12px 20px;
  margin: 8px 0;
  display: inline-block;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
}
</style>
</head>
<body bgcolor="black">
<br>
<center>
<div style="background-color: black">
<font face="Trebuchet MS" size="8" color="white">Delete An Entry</font>
</div>
<div style="background-color: white;width: 550px;height: 450px">
<br><br><br>
<font face="Trebuchet MS" size="5">Enter Player Name</font>

<form action="deletePlayerByName">
<br>
<input type="text" name="playerName">
<br>
<input type="submit" value="Delete">
</form>
</div>
</body>
</html>
------------delete sucesss----------
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<html>
<head>
	<title>Player Delete</title>
<style>
input[type=submit] {
font-family: Trebuchet MS;
background-color: white;
border-color: white;
border-width: 2px solid black;
text-decoration: none;
color: black;
padding: 10px 60px;
margin: 20px 20px;
cursor: pointer;
}
input[type=submit]:hover {
background-color: black;
color: white;
}
</style>
</head>
<body bgcolor="black">
<center>
<br><br><br><br>
<font face="Trebuchet MS" size="6" color="white"><b>Player Deleted Successfully...!</b></font>
<br><br>
<form action="home">
<input type="submit" value="Home">
</form>

</center>
</body>
</html>
-----------------search-----
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<html>
<head>
	<title>Search Directory</title>
<style>
input[type=submit] {
font-family: Trebuchet MS;
background-color: black;
border-color: black;
border-width: 2px solid black;
text-decoration: none;
color: white;
padding: 10px 60px;
margin: 20px 20px;
cursor: pointer;
}
input[type=submit]:hover {
background-color: white;
color: black;
}
</style>
</head>
<body bgcolor="black">
<br>
<center>
<div style="background-color: black">
<font face="Trebuchet MS" size="8" color="white">Directory</font>
</div>
<br>
<div style="background-color: white;width: 550px;height: 480px">
<br><br>
<form action="viewAllPlayers">
<input type="submit" value="      View All Players      ">
</form>
<br><br>
<font face="Trebuchet MS" size="2">or search by:</font>
<form action="searchPlayerByIdPage">
<input type="submit" value="   Player ID   ">
</form>
<form action="searchPlayerByNamePage">
<input type="submit" value="Player Name">
</form>
<form action="searchPlayerByTeamPage">
<input type="submit" value="     Team     ">
</form>
</div>
</center>
</body>
</html>
-------by id-----------
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<html>
<head>
	<title>Search Directory</title>
<style>
input[type=submit] {
font-family: Trebuchet MS;
background-color: black;
border-color: black;
border-width: 2px solid black;
text-decoration: none;
color: white;
padding: 10px 60px;
margin: 20px 20px;
cursor: pointer;
}
input[type=submit]:hover {
background-color: white;
color: black;
}
input[type=text], select {
  width: 50%;
  padding: 12px 20px;
  margin: 8px 0;
  display: inline-block;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
}
</style>
</head>
<body bgcolor="black">
<br>
<center>
<div style="background-color: black">
<font face="Trebuchet MS" size="8" color="white">Search By ID</font>
</div>
<div style="background-color: white;width: 550px;height: 450px">
<br><br><br>
<font face="Trebuchet MS" size="5">Enter Player ID</font>

<form action="searchPlayerById">
<br>
<input type="text" name="playerId" placeholder="Enter Player ID between 101 - 124">
<br>
<input type="submit" value="Search">
</form>
</div>
</body>
</html>
-----------------------by name----------
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<html>
<head>
	<title>Search Directory</title>
<style>
input[type=submit] {
font-family: Trebuchet MS;
background-color: black;
border-color: black;
border-width: 2px solid black;
text-decoration: none;
color: white;
padding: 10px 60px;
margin: 20px 20px;
cursor: pointer;
}
input[type=submit]:hover {
background-color: white;
color: black;
}
input[type=text], select {
  width: 50%;
  padding: 12px 20px;
  margin: 8px 0;
  display: inline-block;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
}
</style>
</head>
<body bgcolor="black">
<br>
<center>
<div style="background-color: black">
<font face="Trebuchet MS" size="8" color="white">Search By Name</font>
</div>
<div style="background-color: white;width: 550px;height: 450px">
<br><br><br>
<font face="Trebuchet MS" size="5">Enter Player Name</font>

<form action="searchPlayerByName">
<br>
<input type="text" name="playerName">
<br>
<input type="submit" value="Search">
</form>
</div>
</body>
</html>
-----------by team
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<html>
<head>
	<title>Search Directory</title>
<style type="text/css">
input[type=text], select {
  width: 50%;
  padding: 12px 20px;
  margin: 8px 0;
  display: inline-block;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
}
input[type=submit] {
font-family: Trebuchet MS;
background-color: black;
border-color: black;
border-width: 2px solid black;
text-decoration: none;
color: white;
padding: 10px 60px;
margin: 20px 20px;
cursor: pointer;
}
input[type=submit]:hover {
background-color: white;
color: black;
}
</style>
</head>
<body bgcolor="black">
<br>
<center>
<div style="background-color: black">
<font face="Trebuchet MS" size="8" color="white">Select a Team</font>
</div>
<div style="background-color: white;width: 550px;height: 200px">
	<br><br><br>
<form action="searchPlayerByTeam">
<select name="playerTeam">
<option value="Cricket">Cricket</option>
<option value="Football">Football</option>
<option value="Badminton">Badminton</option>
<option value="Volley ball">Volley ball</option>
<option value="kho-kho">kho-kho</option>
<option value="Hockey">Hockey</option>
<option value="Basketball">Basketball</option>
<option value="Tennis">Tennis</option>
</select>
<input type="submit" value="Search">
</form>
</div>
</body>
</html>
--------------------update-----------
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<html>
<head>
	<title>Search Directory</title>
<style type="text/css">
input[type=text], select {
  width: 50%;
  padding: 12px 20px;
  margin: 8px 0;
  display: inline-block;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
}
input[type=submit] {
font-family: Trebuchet MS;
background-color: black;
border-color: black;
border-width: 2px solid black;
text-decoration: none;
color: white;
padding: 10px 60px;
margin: 20px 20px;
cursor: pointer;
}
input[type=submit]:hover {
background-color: white;
color: black;
}
</style>
</head>
<body bgcolor="black">
<br>
<center>
<div style="background-color: black">
<font face="Trebuchet MS" size="8" color="white">Select a Team</font>
</div>
<div style="background-color: white;width: 550px;height: 200px">
	<br><br><br>
<form action="searchPlayerByTeam">
<select name="playerTeam">
<option value="Cricket">Cricket</option>
<option value="Football">Football</option>
<option value="Badminton">Badminton</option>
<option value="Volley ball">Volley ball</option>
<option value="kho-kho">kho-kho</option>
<option value="Hockey">Hockey</option>
<option value="Basketball">Basketball</option>
<option value="Tennis">Tennis</option>
</select>
<input type="submit" value="Search">
</form>
</div>
</body>
</html>
------------sucess--------
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>
<html>
<head>
	<title>Player Update</title>
<style>
input[type=submit] {
font-family: Trebuchet MS;
background-color: white;
border-color: white;
border-width: 2px solid black;
text-decoration: none;
color: black;
padding: 10px 60px;
margin: 20px 20px;
cursor: pointer;
}
input[type=submit]:hover {
background-color: black;
color: white;
}
</style>
</head>
<body bgcolor="black">
<center>
<br><br><br><br>
<font face="Trebuchet MS" size="6" color="white"><b>Player Updated Successfully...!</b></font>
<br><br>
<form action="home">
<input type="submit" value="Home">
</form>

</center>
</body>
</html>
------------------display-----------
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Players</title>
<style>
#players {
  font-family: "Trebuchet MS";
  border-collapse: collapse;
  width: 75%;
}
#players td, #players th {
  border: 1px solid #ddd;
  padding: 8px;
}
#players tr:nth-child(even){background-color: #ffffff;}
#players tr:nth-child(odd){background-color: #ffffff;}
#players tr:hover {background-color: #ddd;}
#players th {
  padding-top: 12px;
  padding-bottom: 12px;
  text-align: left;
  background-color: #000000;
  color: white;
}
input[type=submit] {
font-family: Trebuchet MS;
background-color: white;
border-color: white;
border-width: 2px solid black;
text-decoration: none;
color: black;
padding: 10px 60px;
margin: 20px 20px;
cursor: pointer;
}
input[type=submit]:hover {
background-color: black;
color: white;
}
</style>
</head>
<body bgcolor="black">
<center>
	<font face="Trebuchet MS" size="6" color="white">Players</font>
</center>
<br>
<table id="players" align="center">
<tr> <th> Player ID </th> <th> Name </th> <th> Team </th>  </tr>
<c:forEach items="${player}" var="player">
<tr>
<td> ${player.playerId}</td>
<td> ${player.playerName} </td>
<td> ${player.playerTeam} </td>
</tr>
</c:forEach>
</table>

<center>
<form action="home">
<input type="submit" value="Home">
</form>
</center>

</body>
</html>
-------------------==========-----------------
---------pom.xml---------
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
<modelVersion>4.0.0</modelVersion>
<groupId>net.codejava</groupId>
<artifactId>SpringMvcHibernateXML</artifactId>
<name>SpringMvcHibernateXML</name>
<packaging>war</packaging>
<version>1.0.0-BUILD-SNAPSHOT</version>

<properties>
<java-version>1.7</java-version>
<org.springframework-version>4.0.3.RELEASE</org.springframework-version>
</properties>

<dependencies>

<dependency>
    <groupId>org.aspectj</groupId>
    <artifactId>aspectjrt</artifactId>
    <version>1.6.11</version>
</dependency>

<dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>slf4j-api</artifactId>
    <version>1.7.23</version>
</dependency>



<!-- Spring -->
<dependency>
<groupId>org.springframework</groupId>
<artifactId>spring-context</artifactId>
<version>${org.springframework-version}</version>
</dependency>

<dependency>
<groupId>org.springframework</groupId>
<artifactId>spring-webmvc</artifactId>
<version>${org.springframework-version}</version>
</dependency>
<dependency>
<groupId>org.springframework</groupId>
<artifactId>spring-orm</artifactId>
<version>${org.springframework-version}</version>
<type>jar</type>
<scope>compile</scope>
</dependency>

<!-- Hibernate -->
<dependency>
<groupId>org.hibernate</groupId>
<artifactId>hibernate-core</artifactId>
<version>4.3.5.Final</version>
</dependency>

<!-- Servlet -->
<dependency>
<groupId>javax.servlet</groupId>
<artifactId>javax.servlet-api</artifactId>
<version>3.1.0</version>
<scope>provided</scope>
</dependency>
<dependency>
<groupId>javax.servlet.jsp</groupId>
<artifactId>javax.servlet.jsp-api</artifactId>
<version>2.3.1</version>
<scope>provided</scope>
</dependency>
<dependency>
<groupId>jstl</groupId>
<artifactId>jstl</artifactId>
<version>1.2</version>
</dependency>

<!-- Apache Database Connection Pool -->
<!-- https://mvnrepository.com/artifact/commons-dbcp/commons-dbcp -->
<dependency>
   <groupId>commons-dbcp</groupId>
   <artifactId>commons-dbcp</artifactId>
   <version>1.4</version>
</dependency>
 
</dependencies>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <additionalBuildcommands>
                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                    </additionalBuildcommands>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <mainClass>org.test.int1.Main</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
==================================
